<!-- <template>
<div class ="card">
    <div class = "top">
        <p>Drag & Drop Image</p>
    </div>
    <div class ="drag-area">
        <span v-if="!isDragging"> 
           Drag & drop image here or 
           <span class="select" role="button" @click ="SelectFiles">
                 Choose file 
           </span>
        </span>
        <div  v-else    class="select">
            Drop images here 
        </div>
        <input name="file" type="file" class="file" ref="fileinput" multiple @change="onFileSelect"/>
    </div>
    <div class = "container">
        <div class ="image" v-for="(images , index) in images" :key="index">
            <span class="delete">&times;</span>
            <img :src="image.url"/>
         </div>
    </div>
    <button type="button">Upload</button>     
</div>
</template>




<script>
export default  (await import('vue')).defineComponent({
    data(){
        return{
            images:[],
            isDragging: false
        }
    },
    method:{
        SelectFiles(){
            this.$refs.fileInput.click();
        },
        onFileSelect(event){
            const files = event.target.files;
            if(files.length === 0 ) return ;
            for (let i = 0 ; i < files.length ; i++ ){
                if(files[i].type.split("/")[0] != "image") continue;
                if(!this.images.some((e) => e.name === files[i].name)){
                    this.images.push({name: files[i].name , url:URL.createObjectURL(files[i])});
                }
            }

        }
    }
})
</script>






































<style>
.card{
    width: 100%;
    padding: 10px ;
    box-shadow: 0 0 5px white;
    border-radius: 5px ;
    overflow: hidden ; 
}
.card .top {
    text-align: center ;

}

.card p{
    font-weight: bold ;
    color: red  ;

}

.card button {
    outline: 0 ; 
    border: 0 ;
    color : white ; 
    border-radius: 4px;
    font-weight: 400;
    padding:8px 13px ;
    width:100% ;
    background: red ;

}


.card .drag-area{
    height: 150 px ;
    border-radius: 5px ; 
    border: 2px dashed red ; 
    background: white;
    color: red ;
    display: flex ; 
    justify-content: center;
    align-items: center;
    user-select: center;
    -webkit-user-select: none;
    margin-top: 10px ; 
}

.card .drag-area .visible{
    font-size: 18px;
}

.card .select{
    color: blue ;
    margin-left: 5px ; 
    cursor: pointer ;
    transition: 0.4s ;
}

.card .select:hover {
    opacity: 0.6;
}

.card .container{
    width:100%;
    height: auto ; 
    display: flex ; 
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    max-height: 200px ;
    position: relative ; 
    margin-bottom : 8px ; 

}


.card .container .image{
    width: 75px ;
    margin-right: 5px;
    height: 75px ;
    position: relative;
    margin-bottom: 8px;
}







.card .container .image img{
    width: 100%;
    height: 100%;
    border-radius: 5px;
}

.card .container .image span{
    position: absolute;
    top: -2px;
    right: 9px ; 
    font-size: 20px ;
    cursor: pointer ;
}

.card input, 
.card .drag-area .on-drop ,
.card .drag-area.dragover .visble{
    display: none ; 
} 


.delete{
    z-index: 999;
    color: red;
}
</style> -->






<template>
    <div>
       <img src:"previewImage" class="uploading-image" />
       <input type="file" accept="image/jpeg" @change=uploadImage>
    </div>
 </template>
 
 <script>
     export default {
         name:'imageUpload',
         data(){
             return{
                previewImage:null
             }
         },
         methods:{
             uploadImage(e){
                 const image = e.target.files[0];
                 const reader = new FileReader();
                 reader.readAsDataURL(image);
                 reader.onload = e =>{
                     this.previewImage = e.target.result;
                     console.log(this.previewImage);
                 };
             }
         }
      }  // missing closure added
 </script>
 
 
 
 <style>
    .uploading-image{
      display:flex;
    }
  </style>









  <template>
    <div>
        <img :src="previewImage" class="uploading-image" />
        <input type="file" accept="image/jpeg" @change="uploadImage">
    </div>
</template>

<script>
import axios from 'axios';

export default {
    name: 'imageUpload', 
    data() {
        return {
            previewImage: null
        };
    },
    methods: {
        uploadImage(e) {
            const image = e.target.files[0];
            const reader = new FileReader();
            reader.readAsDataURL(image);
            reader.onload = (e) => {
                this.previewImage = e.target.result;
                console.log(this.previewImage);
            };

            const URL = 'http://foobar.com/upload'; 

            let data = new FormData();
            data.append('name', 'my-picture');
            data.append('file', e.target.files[0]); 

            let config = {
                headers: {
                    'Content-Type': 'image/png'
                }
            };

            axios.put(URL, data, config).then((response) => {
                console.log('image upload response > ', response);
            });
        }
    }
} 
</script>

<style>
    .uploading-image { display: flex; }
</style>
